plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'sg.palo'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20230618'



}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

//asciidoctor {
//	sourceDir 'src/main/asciidoc'
//	attributes \
//      'snippets': file('target/snippets/home')
//}

asciidoctor {
	configurations 'asciidoctorExt'
	sourceDir 'src/main/asciidoc'
	inputs.dir snippetsDir
	dependsOn test

	ext.capturedOutput = []
	def listener = { ext.capturedOutput << it } as StandardOutputListener

	logging.addStandardErrorListener(listener)
	logging.addStandardOutputListener(listener)

	doLast {
		logging.removeStandardOutputListener(listener)
		logging.removeStandardErrorListener(listener)
		ext.capturedOutput.join('').with { output ->
			if (output =~ /No snippets were found./ || output =~ /not found/) {
				throw new RuntimeException("There are missing snippets.\n" + output)
			} else if (output =~ /include file not found:/) {
				throw new RuntimeException("Include file(s) not found.\n" + output)
			}
		}
	}
}